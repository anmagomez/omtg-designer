var ENTER_KEY=13;var ESC_KEY=27;var LEFT_ARROW_KEY=37;var TOP_ARROW_KEY=38;var RIGHT_ARROW_KEY=39;var DOWN_ARROW_KEY=40;var app={omtg:{},msgs:{DELETE_CONNECTION:"This connection will be detached. There is no undo. Are you sure?",DELETE_DIAGRAM:"This diagram will be removed. All its connection will be detached. There is no undo. Are you sure?",EMPTY_PROJECT:"Project is empty, there is nothing to export!",NOT_EMPTY_PROJECT:"Project is not empty"}};$(function(){"use strict";app.diagramsTools=new app.Tools([{name:"polygon",model:"omtgDiagram",tooltip:"Polygon",icon:"imgs/omtg/polygon.png"},{name:"line",model:"omtgDiagram",tooltip:"Line",icon:"imgs/omtg/line.png"},{name:"point",model:"omtgDiagram",tooltip:"Point",icon:"imgs/omtg/point.png"},{name:"node",model:"omtgDiagram",tooltip:"Node",icon:"imgs/omtg/node.png"},{name:"isolines",model:"omtgDiagram",tooltip:"Isolines",icon:"imgs/omtg/isolines.png"},{name:"planar-subdivision",model:"omtgDiagram",tooltip:"Planar Subdivision",icon:"imgs/omtg/planar-subdivision.png"},{name:"TIN",model:"omtgDiagram",tooltip:"Triangular Irregular Network",icon:"imgs/omtg/TIN.png"},{name:"tesselation",model:"omtgDiagram",tooltip:"Tesselation",icon:"imgs/omtg/tesselation.png"},{name:"sample",model:"omtgDiagram",tooltip:"Sample",icon:"imgs/omtg/sample.png"},{name:"un-line",model:"omtgDiagram",tooltip:"Unidirectional Line",icon:"imgs/omtg/un-line.png"},{name:"bi-line",model:"omtgDiagram",tooltip:"Bidirectional Line",icon:"imgs/omtg/bi-line.png"},{name:"conventional",model:"omtgDiagram",tooltip:"Conventional",icon:"imgs/omtg/conventional.png"}]);app.relationsTools=new app.Tools([{name:"association",model:"omtgRelation",tooltip:"Association",icon:"imgs/relation/association.png"},{name:"spatial-association",model:"omtgRelation",tooltip:"Spatial Association",icon:"imgs/relation/spatial-association.png"},{name:"aggregation",model:"omtgRelation",tooltip:"Aggregation",icon:"imgs/relation/aggregation.png"},{name:"spatial-aggregation",model:"omtgRelation",tooltip:"Spatial Aggregation",icon:"imgs/relation/spatial-aggregation.png"},{name:"cartographic-generalization-overlapping",model:"omtgRelation",tooltip:"Cartographic Generalization Overlapping",icon:"imgs/relation/cartographic-generalization-overlapping.png"},{name:"cartographic-generalization-disjoint",model:"omtgRelation",tooltip:"Cartographic Generalization Disjoint",icon:"imgs/relation/cartographic-generalization-disjoint.png"},{name:"generalization-disjoint-partial",model:"omtgRelation",tooltip:"Generalization Disjoint-Partial",icon:"imgs/relation/generalization-disjoint-partial.png"},{name:"generalization-overlapping-partial",model:"omtgRelation",tooltip:"Generalization Overlapping-Partial",icon:"imgs/relation/generalization-overlapping-partial.png"},{name:"generalization-disjoint-total",model:"omtgRelation",tooltip:"Generalization Disjoint-Total",icon:"imgs/relation/generalization-disjoint-total.png"},{name:"generalization-overlapping-total",model:"omtgRelation",tooltip:"Generalization Overlapping-Total",icon:"imgs/relation/generalization-overlapping-total.png"},{name:"arc-network",model:"omtgRelation",tooltip:"Arc Network",icon:"imgs/relation/arc-network.png"}]);app.toolboxes=new app.Toolboxes([{name:"Diagrams",tools:app.diagramsTools},{name:"Relations",tools:app.relationsTools}]);app.canvas=new app.Canvas;app.navbarView=new app.NavbarView({el:$("#navbar")});app.toolboxesView=new app.ToolboxesView({el:$("#section-sidebar"),model:app.toolboxes});app.canvasView=new app.CanvasView({el:"#canvas",model:app.canvas})});jsPlumb.ready(function(){var defaultConnectorStyle={strokeStyle:"black",lineWidth:2,outlineColor:"transparent",outlineWidth:4};var dashedConnectorStyle={strokeStyle:"black",lineWidth:2,outlineColor:"transparent",outlineWidth:4,dashstyle:"4"};var connectorHoverStyle={lineWidth:4,strokeStyle:"#1e8151",outlineWidth:2,outlineColor:"white"};var diamondOverlay=[["Diamond",{length:35,width:18,location:35,paintStyle:{strokeStyle:"black",fillStyle:"white"}}]];var triangleEndpoint=function(type){if(type=="generalization-disjoint-partial")return["Image",{src:"imgs/omtg/triangle-white.png",cssClass:"triangle-endpoint"}];if(type=="generalization-overlapping-partial")return["Image",{src:"imgs/omtg/triangle-black.png",cssClass:"triangle-endpoint"}];if(type=="generalization-disjoint-total")return["Image",{src:"imgs/omtg/triangle-circle-white.png",cssClass:"triangle-endpoint"}];if(type=="generalization-overlapping-total")return["Image",{src:"imgs/omtg/triangle-circle-black.png",cssClass:"triangle-endpoint"}]};var triangle=function(color,position){return["Custom",{create:function(component){return $('<svg class="generalization-triangle" height="26" width="26"><polygon points="1,25 13,1 25,25" stroke="black" stroke-width="1" fill="'+color+'" /></svg>')},location:position,id:"generalization-triangle"}]};var circle=function(position){return["Custom",{create:function(component){return $('<svg width="16px" height="16px"><circle cx="8" cy="8" r="8" stroke="black" stroke-width="0" fill="black" /></svg>')},location:position}]};var square=function(color,position){return["Custom",{create:function(component){return $('<svg class="cartographic-square" width="16px" height="16px"><rect width="15px" height="15px"  stroke="black" stroke-width="2" fill="'+color+'" /></svg>')},id:"cartographic-square",location:position}]};app.plumb=jsPlumb.getInstance({Anchor:"Continuous",ConnectionsDetachable:false,Connector:"Flowchart",Container:"canvas",DragOptions:{cursor:"pointer",zIndex:2e3},Endpoint:"Blank",HoverPaintStyle:connectorHoverStyle});app.plumb.registerConnectionTypes({association:{paintStyle:defaultConnectorStyle,overlays:[["Label",{label:"",location:.5,id:"description-label",cssClass:"description-label"}],["Label",{label:"",location:45,id:"cardinality-labelA",cssClass:"cardinality-label"}],["Label",{label:"",location:-45,id:"cardinality-labelB",cssClass:"cardinality-label"}]],parameters:{minA:"",maxA:"",minB:"",maxB:""}},"spatial-association":{paintStyle:dashedConnectorStyle,overlays:[["Label",{label:"",location:.5,id:"description-label",cssClass:"description-label"}],["Label",{label:"",location:45,id:"cardinality-labelA",cssClass:"cardinality-label"}],["Label",{label:"",location:-45,id:"cardinality-labelB",cssClass:"cardinality-label"}]],parameters:{minA:"",maxA:"",minB:"",maxB:""}},aggregation:{paintStyle:defaultConnectorStyle,overlays:diamondOverlay},"spatial-aggregation":{paintStyle:dashedConnectorStyle,overlays:diamondOverlay},"generalization-disjoint-partial":{connector:["Flowchart",{stub:[50,30],alwaysRespectStubs:true}],paintStyle:defaultConnectorStyle,overlays:[triangle("white",13)],parameters:{participation:"partial",disjointness:"disjoint"}},"generalization-overlapping-partial":{connector:["Flowchart",{stub:[50,30],alwaysRespectStubs:true}],paintStyle:defaultConnectorStyle,overlays:[triangle("black",13)],parameters:{participation:"partial",disjointness:"overlapping"}},"generalization-disjoint-total":{connector:["Flowchart",{stub:[50,30],alwaysRespectStubs:true}],paintStyle:defaultConnectorStyle,overlays:[circle(9),triangle("white",30)],parameters:{participation:"total",disjointness:"disjoint"}},"generalization-overlapping-total":{connector:["Flowchart",{stub:[50,30],alwaysRespectStubs:true}],paintStyle:defaultConnectorStyle,overlays:[circle(9),triangle("black",30)],parameters:{participation:"total",disjointness:"overlapping"}},"generalization-leg":{connector:["Flowchart",{stub:[50,30],alwaysRespectStubs:true}],paintStyle:defaultConnectorStyle},"arc-network":{connector:"Straight",paintStyle:dashedConnectorStyle,overlays:[["Label",{label:"network",location:.5,id:"description-label",cssClass:"arc-network-label"}]]},"arc-network-sibling":{connector:"Straight",paintStyle:dashedConnectorStyle},"arc-network-self":{connector:["Flowchart",{stub:[50,50],alwaysRespectStubs:true}],paintStyle:dashedConnectorStyle,overlays:[["Label",{label:"network",location:.4,id:"description-label",cssClass:"arc-network-label"}]]},"arc-network-sibling-self":{connector:["Flowchart",{stub:[25,25],alwaysRespectStubs:true}],paintStyle:dashedConnectorStyle},"cartographic-generalization-disjoint":{connector:["Flowchart",{stub:[70,50],alwaysRespectStubs:true}],paintStyle:dashedConnectorStyle,overlays:[square("white",70),["Label",{label:"scale",location:.5,id:"cartographic-label",cssClass:"cartographic-label"}]],parameters:{disjointness:"disjoint"}},"cartographic-generalization-overlapping":{connector:["Flowchart",{stub:[70,50],alwaysRespectStubs:true}],paintStyle:dashedConnectorStyle,overlays:[square("black",70),["Label",{label:"scale",location:.5,id:"cartographic-label",cssClass:"cartographic-label"}]],parameters:{disjointness:"overlapping"}},"cartographic-leg":{connector:["Flowchart",{stub:[0,50],alwaysRespectStubs:true}],paintStyle:dashedConnectorStyle}});app.plumb.bind("connectionDrag",function(connection){var tool=app.canvas.get("activeTool");if(tool&&tool.get("model")=="omtgRelation"){connection.setType(tool.get("name"));return}if(connection.source.classList[0]=="cartographic-square"){connection.setType("cartographic-leg")}});app.plumb.bind("connection",function(info,originalEvent){var type=info.connection.getType()[0];switch(type){case"arc-network":if(info.connection.sourceId==info.connection.targetId){app.plumb.detach(info.connection);var newConn=app.plumb.connect({source:info.connection.sourceId,target:info.connection.targetId,anchors:[[.35,1,0,1],[1,.5,1,0]],type:"arc-network-self",fireEvent:false});var sibling=app.plumb.connect({source:info.connection.sourceId,target:info.connection.targetId,anchors:[[.5,1,0,1],[1,.75,1,0]],type:"arc-network-sibling-self",parameters:{sibling:newConn},fireEvent:false});newConn.setParameter("sibling",sibling)}else{var sibling=app.plumb.connect({source:info.connection.sourceId,target:info.connection.targetId,type:"arc-network-sibling",parameters:{sibling:info.connection},fireEvent:false});info.connection.setParameter("sibling",sibling)}break;case"generalization-disjoint-partial":case"generalization-disjoint-total":case"generalization-overlapping-partial":case"generalization-overlapping-total":var participation=info.connection.getParameter("participation");var disjointness=info.connection.getParameter("disjointness");app.plumb.detach(info.connection);var endpoint=app.plumb.addEndpoint(info.connection.sourceId,{anchor:[.5,1.2,0,1],connectionType:"generalization-leg",endpoint:triangleEndpoint(type),isSource:true,isTarget:false,maxConnections:100,uniqueEndpoint:true,parameters:{participation:participation,disjointness:disjointness}});var newConn=app.plumb.connect({anchors:["Bottom","Top"],source:endpoint,target:info.connection.targetId,type:type,fireEvent:false});newConn.removeAllOverlays();break;case"generalization-leg":info.connection.endpoints[1].setAnchor("Top");break;case"cartographic-generalization-disjoint":case"cartographic-generalization-overlapping":app.plumb.detach(info.connection);var newConn=app.plumb.connect({source:info.connection.sourceId,target:info.connection.targetId,anchors:["Bottom","Top"],type:type,fireEvent:false});app.plumb.makeSource(newConn.getOverlay("cartographic-square").getElement());break;case"cartographic-leg":info.connection.endpoints[1].setAnchor("Top");break}});app.plumb.bind("beforeDrop",function(info){var type=info.connection.getType()[0];if(type!="arc-network"&&info.sourceId==info.targetId){return false}var sourceType=app.canvas.get("diagrams").get(info.sourceId,"type");var targetType=app.canvas.get("diagrams").get(info.targetId,"type");switch(type){case"generalization-disjoint-partial":case"generalization-overlapping-partial":case"generalization-disjoint-total":case"generalization-overlapping-total":return sourceType==targetType;case"aggregation":return sourceType=="conventional"&&targetType=="conventional";case"cartographic-generalization-disjoint":case"cartographic-generalization-overlapping":return sourceType=="conventional"&&targetType!="conventional";case"cartographic-leg":return targetType!="conventional";case"spatial-association":case"spatial-aggregation":return sourceType!="conventional"&&targetType!="conventional";case"arc-network":return sourceType==targetType&&(sourceType=="node"||sourceType=="bi-line"||sourceType=="un-line")||sourceType=="node"&&(targetType=="bi-line"||targetType=="un-line")||targetType=="node"&&(sourceType=="bi-line"||sourceType=="un-line")}return true});app.plumb.bind("dblclick",function(conn,originalEvent){var param=conn;if(conn instanceof jsPlumb.Overlays.Label)param=conn.component;var type=param.getType()[0];if(type=="arc-network-sibling"||type=="arc-network-sibling-self")param=param.getParameter("sibling");if(type=="aggregation"||type=="spatial-aggregation"||type=="cartographic-leg"){if(confirm(app.msgs.DELETE_CONNECTION)){app.plumb.detach(param)}}else if(type=="generalization-disjoint-partial"||type=="generalization-disjoint-total"||type=="generalization-overlapping-partial"||type=="generalization-overlapping-total"){if(confirm(app.msgs.DELETE_CONNECTION)){var endpoint=param.endpoints[0];app.plumb.detach(param);if(endpoint.getAttachedElements().length==0){app.plumb.deleteEndpoint(endpoint)}else{endpoint.getAttachedElements()[0].setType(type);endpoint.getAttachedElements()[0].removeAllOverlays()}}}else if(type=="generalization-leg"){if(confirm(app.msgs.DELETE_CONNECTION)){var endpoint=param.endpoints[0];app.plumb.detach(param);if(endpoint.getAttachedElements().length==0){app.plumb.deleteEndpoint(endpoint)}}}else{new app.omtg.ConnectionEditorView({connection:param})}})});"use strict";app.XMLParser={parseOMTGSchema:function(xml){app.plumb.setSuspendDrawing(true);var domParser=new DOMParser;var xmlDoc=domParser.parseFromString(xml,"text/xml");this.diagramMap={};var diagrams=xmlDoc.getElementsByTagName("classes")[0].childNodes;var connections=xmlDoc.getElementsByTagName("relationships")[0].childNodes;this.parseOMTGDiagrams(diagrams);this.parseOMTGConnections(connections);app.plumb.setSuspendDrawing(false,true)},parseOMTGDiagrams:function(elements){for(var i=0;i<elements.length;i++){var node=elements.item(i);var diagram=this.parseOMTGDiagram(node);app.canvas.get("diagrams").add(diagram)}},parseOMTGDiagram:function(element){var children=element.childNodes;var diagram=new app.omtg.Diagram;for(var i=0;i<children.length;i++){switch(children.item(i).nodeName){case"name":diagram.set("name",children.item(i).firstChild.nodeValue);break;case"top":diagram.set("top",parseFloat(children.item(i).firstChild.nodeValue));break;case"left":diagram.set("left",parseFloat(children.item(i).firstChild.nodeValue));break;case"type":diagram.set("type",children.item(i).firstChild.nodeValue);break;case"attributes":diagram.set("attributes",this.parseOMTGAttributes(children.item(i)));break}}this.diagramMap[diagram.get("name")]=diagram.get("id");return diagram},parseOMTGAttributes:function(element){var children=element.childNodes;var attributes=new app.omtg.Attributes;for(var i=0;i<children.length;i++){var attribute=this.parseOMTGAttribute(children.item(i));attributes.add(attribute)}return attributes},parseOMTGAttribute:function(element){var children=element.childNodes;var attribute=new app.omtg.Attribute;for(var i=0;i<children.length;i++){switch(children.item(i).nodeName){case"id":attribute.set("id",children.item(i).firstChild.nodeValue);break;case"name":attribute.set("name",children.item(i).firstChild.nodeValue);break;case"type":attribute.set("type",children.item(i).firstChild.nodeValue);break;case"default":attribute.set("defaultValue",children.item(i).firstChild.nodeValue);break;case"key":attribute.set("isKey",children.item(i).firstChild.nodeValue);break;case"length":attribute.set("length",children.item(i).firstChild.nodeValue);break;case"scale":attribute.set("scale",children.item(i).firstChild.nodeValue);break;case"size":attribute.set("size",children.item(i).firstChild.nodeValue);break;case"not-null":attribute.set("isNotNull",children.item(i).firstChild.nodeValue);break;case"domain":attribute.set("domain",this.parseOMTGAttributeDomain(children.item(i)));break}}return attribute},parseOMTGAttributeDomain:function(element){return null},parseOMTGConnections:function(elements){for(var i=0;i<elements.length;i++){var node=elements.item(i);this.parseOMTGConnection(node)}},parseOMTGConnection:function(element){switch(element.nodeName){case"conventional":var description=this.getValue(element.childNodes[0].firstChild);var sourceName=element.childNodes[1].firstChild.nodeValue;var targetName=element.childNodes[3].firstChild.nodeValue;var cardinalityA=element.childNodes[2];var cardinalityB=element.childNodes[4];var connection=app.plumb.connect({source:this.diagramMap[sourceName],target:this.diagramMap[targetName],type:"association"});connection.getOverlay("description-label").setLabel(description);this.parseOMTGConnectionCardinality(cardinalityA,connection,"A");this.parseOMTGConnectionCardinality(cardinalityB,connection,"B");break;case"topological":var description=this.getValue(element.childNodes[0].firstChild.firstChild);var sourceName=element.childNodes[1].firstChild.nodeValue;var targetName=element.childNodes[3].firstChild.nodeValue;var cardinalityA=element.childNodes[2];var cardinalityB=element.childNodes[4];var connection=app.plumb.connect({source:this.diagramMap[sourceName],target:this.diagramMap[targetName],type:"spatial-association"});connection.getOverlay("description-label").setLabel(description);this.parseOMTGConnectionCardinality(cardinalityA,connection,"A");this.parseOMTGConnectionCardinality(cardinalityB,connection,"B");break;case"conventional-aggregation":var sourceName=element.childNodes[0].firstChild.nodeValue;var targetName=element.childNodes[1].firstChild.nodeValue;app.plumb.connect({source:this.diagramMap[sourceName],target:this.diagramMap[targetName],type:"aggregation"});break;case"spatial-aggregation":var sourceName=element.childNodes[0].firstChild.nodeValue;var targetName=element.childNodes[1].firstChild.nodeValue;app.plumb.connect({source:this.diagramMap[sourceName],target:this.diagramMap[targetName],type:"spatial-aggregation"});break;case"network":var description=this.getValue(element.childNodes[0].firstChild);var sourceName=element.childNodes[1].firstChild.nodeValue;var targetName=element.childNodes[2].firstChild.nodeValue;var type="arc-network";var typeSibling="arc-network-sibling";var anchors=["Continuous","Continuous"];var anchorsSibling=["Continuous","Continuous"];if(sourceName==targetName){type="arc-network-self";typeSibling="arc-network-sibling-self";anchors=[[.35,1,0,1],[1,.5,1,0]];anchorsSibling=[[.5,1,0,1],[1,.75,1,0]]}var connection=app.plumb.connect({source:this.diagramMap[sourceName],target:this.diagramMap[targetName],anchors:anchors,type:type,fireEvent:false});var sibling=app.plumb.connect({source:this.diagramMap[sourceName],target:this.diagramMap[targetName],anchors:anchorsSibling,type:typeSibling,parameters:{sibling:connection},fireEvent:false});connection.setParameter("sibling",sibling);connection.getOverlay("description-label").setLabel(description);break;case"conceptual-generalization":var sourceName=element.childNodes[0].firstChild.nodeValue;var disjointness=element.childNodes[2].firstChild.nodeValue;var targetName=element.childNodes[3].childNodes[0].firstChild.nodeValue;var subDiagrams=element.childNodes[3].childNodes;var connection=app.plumb.connect({source:this.diagramMap[sourceName],target:this.diagramMap[targetName],anchors:["Bottom","Top"],type:"cartographic-generalization-"+disjointness,fireEvent:false});var square=connection.getOverlay("cartographic-square").getElement();app.plumb.makeSource(square);for(var i=1;i<subDiagrams.length;i++){app.plumb.connect({source:square,target:this.diagramMap[subDiagrams[i].firstChild.nodeValue],type:"cartographic-leg"})}break;case"generalization":var sourceName=element.childNodes[0].firstChild.nodeValue;var participation=element.childNodes[1].firstChild.nodeValue;var disjointness=element.childNodes[2].firstChild.nodeValue;var subDiagrams=element.childNodes[3].childNodes;var type="generalization-"+disjointness+"-"+participation;var triangleEndpoint=function(type){if(type=="generalization-disjoint-partial")return["Image",{src:"imgs/omtg/triangle-white.png",cssClass:"triangle-endpoint"}];if(type=="generalization-overlapping-partial")return["Image",{src:"imgs/omtg/triangle-black.png",cssClass:"triangle-endpoint"}];if(type=="generalization-disjoint-total")return["Image",{src:"imgs/omtg/triangle-circle-white.png",cssClass:"triangle-endpoint"}];if(type=="generalization-overlapping-total")return["Image",{src:"imgs/omtg/triangle-circle-black.png",cssClass:"triangle-endpoint"}]};var endpoint=app.plumb.addEndpoint(this.diagramMap[sourceName],{anchor:[.5,1.2,0,1],connectionType:"generalization-leg",endpoint:triangleEndpoint(type),isSource:true,isTarget:false,maxConnections:100,uniqueEndpoint:true,parameters:{participation:participation,disjointness:disjointness}});for(var i=0;i<subDiagrams.length;i++){app.plumb.connect({source:endpoint,target:this.diagramMap[subDiagrams[i].firstChild.nodeValue],type:"generalization-leg"})}break}},parseOMTGConnectionCardinality:function(element,connection,side){if(side!="A"&&side!="B")return;var min="",max="",str="";min=this.getValue(element.childNodes[0].firstChild);max=this.getValue(element.childNodes[1].firstChild);if(min==""&&max==""){str=""}else if(min!=""&&max!=""){str=min+".."+max}else{str=min+""+max}connection.getOverlay("cardinality-label"+side).setLabel(str);connection.setParameter("min"+side,min);connection.setParameter("max"+side,max)},getValue:function(p){if(p)return p.nodeValue;else return""}};(function(){"use strict";app.Canvas=Backbone.Model.extend({defaults:function(){return{diagrams:new app.omtg.Diagrams,activeTool:null}},toXML:function(){var xml='<?xml version="1.0" encoding="UTF-8"?>'+'<omtg-conceptual-schema xsi:noNamespaceSchemaLocation="omtg-schema-template.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">'+this.get("diagrams").toXML()+this.connectionsToXML()+"</omtg-conceptual-schema>";return xml},connectionsToXML:function(){var conns=app.plumb.getConnections();var connsXML="";for(var i=0;i<conns.length;i++){var type=conns[i].getType()[0];if(type!="arc-network-sibling"&&type!="cartographic-leg"&&type!="generalization-leg"){connsXML+=this.connectionToXML(conns[i])}}return"<relationships>"+connsXML+"</relationships>"},connectionToXML:function(conn){var type=conn.getType()[0];switch(type){case"aggregation":var sourceName=this.get("diagrams").get(conn.sourceId,"name");var targetName=this.get("diagrams").get(conn.targetId,"name");return"<conventional-aggregation>"+"<class1>"+sourceName+"</class1>"+"<class2>"+targetName+"</class2>"+"</conventional-aggregation>";case"spatial-aggregation":var sourceName=this.get("diagrams").get(conn.sourceId,"name");var targetName=this.get("diagrams").get(conn.targetId,"name");return"<spatial-aggregation>"+"<class1>"+sourceName+"</class1>"+"<class2>"+targetName+"</class2>"+"</spatial-aggregation>";case"association":var description=conn.getOverlay("description-label").getLabel();var sourceName=this.get("diagrams").get(conn.sourceId,"name");var targetName=this.get("diagrams").get(conn.targetId,"name");var minA=conn.getParameter("minA");var maxA=conn.getParameter("maxA");var minB=conn.getParameter("minB");var maxB=conn.getParameter("maxB");return"<conventional>"+"<name>"+description+"</name>"+"<class1>"+sourceName+"</class1><cardinality1><min>"+minA+"</min><max>"+maxA+"</max></cardinality1>"+"<class2>"+targetName+"</class2><cardinality2><min>"+minB+"</min><max>"+maxB+"</max></cardinality2>"+"</conventional>";case"spatial-association":var description=conn.getOverlay("description-label").getLabel();var sourceName=this.get("diagrams").get(conn.sourceId,"name");var targetName=this.get("diagrams").get(conn.targetId,"name");var minA=conn.getParameter("minA");var maxA=conn.getParameter("maxA");var minB=conn.getParameter("minB");var maxB=conn.getParameter("maxB");return"<topological>"+"<spatial-relations><spatial-relation>"+description+"</spatial-relation></spatial-relations>"+"<class1>"+sourceName+"</class1><cardinality1><min>"+minA+"</min><max>"+maxA+"</max></cardinality1>"+"<class2>"+targetName+"</class2><cardinality2><min>"+minB+"</min><max>"+maxB+"</max></cardinality2>"+"</topological>";case"arc-network":case"arc-network-self":var description=conn.getOverlay("description-label").getLabel();var sourceName=this.get("diagrams").get(conn.sourceId,"name");var targetName=this.get("diagrams").get(conn.targetId,"name");return"<network>"+"<name>"+description+"</name>"+"<class1>"+sourceName+"</class1>"+"<class2>"+targetName+"</class2>"+"</network>";case"generalization-disjoint-partial":case"generalization-disjoint-total":case"generalization-overlapping-partial":case"generalization-overlapping-total":var superName=this.get("diagrams").get(conn.sourceId,"name");var endpoint=conn.endpoints[0];var participation=endpoint.getParameter("participation");var disjointness=endpoint.getParameter("disjointness");var subClasses="";var subConns=endpoint.getAttachedElements();for(var i=0;i<subConns.length;i++){var subName=this.get("diagrams").get(subConns[i].targetId,"name");subClasses+="<subclass>"+subName+"</subclass>"}return"<generalization>"+"<superclass>"+superName+"</superclass>"+"<participation>"+participation+"</participation>"+"<disjointness>"+disjointness+"</disjointness>"+"<subclasses>"+subClasses+"</subclasses>"+"</generalization>";case"cartographic-generalization-disjoint":case"cartographic-generalization-overlapping":var superName=this.get("diagrams").get(conn.sourceId,"name");var disjointness=conn.getParameter("disjointness");var description=conn.getOverlay("cartographic-label").getLabel();var subClasses="<subclass>"+this.get("diagrams").get(conn.targetId,"name")+"</subclass>";var subConns=app.plumb.getConnections({source:conn.getOverlay("cartographic-square").getElement()});for(var i=0;i<subConns.length;i++){var subName=this.get("diagrams").get(subConns[i].targetId,"name");subClasses+="<subclass>"+subName+"</subclass>"}return"<conceptual-generalization>"+"<superclass>"+superName+"</superclass>"+"<scale-shape>"+description+"</scale-shape>"+"<disjointness>"+disjointness+"</disjointness>"+"<subclasses>"+subClasses+"</subclasses>"+"</conceptual-generalization>";default:return""}}})})();(function(){"use strict";app.Toolbox=Backbone.Model.extend({defaults:function(){return{name:"",tools:null}}})})();(function(){"use strict";app.Tool=Backbone.Model.extend({defaults:function(){return{name:"",type:"",tooltip:"",icon:"",active:false}},toggleActive:function(){this.set("active",!this.get("active"))}})})();(function(){"use strict";app.omtg.Attribute=Backbone.Model.extend({defaults:function(){return{name:"",type:"Varchar",defaultValue:"",isKey:false,length:"",scale:"",size:"",isNotNull:false,domain:""}},toXML:function(){var xml="<attribute>";xml+="<name>"+this.get("name")+"</name>";xml+="<type>"+this.get("type")+"</type>";if(this.get("isKey"))xml+="<key>"+this.get("isKey")+"</key>";if(this.get("length")!="")xml+="<length>"+this.get("length")+"</length>";if(this.get("scale")!="")xml+="<scale>"+this.get("scale")+"</scale>";if(this.get("isNotNull"))xml+="<not-null>"+this.get("isNotNull")+"</not-null>";if(this.get("defaultValue")!="")xml+="<default>"+this.get("defaultValue")+"</default>";if(this.get("size")!="")xml+="<size>"+this.get("size")+"</size>";if(this.get("domain")!=""){xml+="<domain>";var values=this.domain.split("\n");for(var i=0;i<values.length;i++){xml+="<value>"+values[i]+"</value>"}xml+="</domain>"}xml+="</attribute>";return xml}})})();(function(){"use strict";app.omtg.Diagram=Backbone.Model.extend({defaults:function(){return{id:this.cid,type:"",name:"Class "+this.cid,attributes:new app.omtg.Attributes,selected:false,top:10,left:10,deleted:false}},toggleSelected:function(){this.set("selected",!this.get("selected"))},toXML:function(){return"<class>"+"<name>"+this.get("name")+"</name>"+"<top>"+this.get("top")+"</top>"+"<left>"+this.get("left")+"</left>"+"<type>"+this.get("type")+"</type>"+"<attributes>"+this.get("attributes").toXML()+"</attributes>"+"</class>"}})})();(function(){"use strict";app.Toolboxes=Backbone.Collection.extend({model:app.Toolbox})})();(function(){"use strict";app.Tools=Backbone.Collection.extend({model:app.Tool,initialize:function(){this.listenTo(this,"change:active",this.propagate_active)},propagate_active:function(p){if(!p.get("active"))return;this.each(function(m){if(p.get("name")!=m.get("name"))m.set({active:false},{silent:false})})},deactivateAll:function(){this.each(function(m){m.set({active:false},{silent:false})})},activated:function(){return this.findWhere({active:true})},getTooltip:function(name){return this.findWhere({name:name}).get("tooltip")}})})();(function(){"use strict";app.omtg.Attributes=Backbone.Collection.extend({model:app.omtg.Attribute,toXML:function(){var xml="";this.each(function(model){xml+=model.toXML()});return xml}})})();(function(){"use strict";app.omtg.Diagrams=Backbone.Collection.extend({model:app.omtg.Diagram,initialize:function(){this.listenTo(this,"change:selected",this.propagate_selected)},propagate_selected:function(p){if(!p.get("selected"))return;this.each(function(m){if(p.id!=m.id)m.set({selected:false},{silent:false})})},unselectAll:function(){this.each(function(m){m.set({selected:false},{silent:false})})},get:function(id,attr){var diagram=this.findWhere({id:id});if(diagram)return diagram.get(attr);return null},toXML:function(){var xml="";this.each(function(model){if(!model.get("deleted"))xml+=model.toXML()});return"<classes>"+xml+"</classes>"}})})();(function($){"use strict";app.NavbarView=Backbone.View.extend({events:{"click #btnImportXML":"importXML","click #btnExportXML":"exportXML","click #btnExportSQL":"exportSQL","click #btnPrint":"print"},importXML:function(){if(app.canvas.get("diagrams").length>0){if(app.canvas.get("diagrams").length>0){alert(app.msgs.NOT_EMPTY_PROJECT);return}new app.XMLImporterView}},exportXML:function(){if(app.canvas.get("diagrams").length==0){alert(app.msgs.EMPTY_PROJECT);return}app.plumb.doWhileSuspended(function(){var xml=app.canvas.toXML();var blob=new Blob([xml]);saveAs(blob,"OMTG.xml")},false)},exportSQL:function(){if(app.canvas.get("diagrams").length==0){alert(app.msgs.EMPTY_PROJECT);return}app.plumb.doWhileSuspended(function(){var xml=app.canvas.toXML();$.ajax({url:"omtg2sql",type:"POST",data:xml,contentType:"application/json; charset=UTF-8",success:function(data,textStatus,jqXHR){var byteArray=new Uint8Array(data.length);for(var i=0;i<data.length;i++){byteArray[i]=data.charCodeAt(i)&255}var blob=new Blob([byteArray]);saveAs(blob,"OMTG.zip")},error:function(ajaxrequest,ajaxOptions,thrownError){alert("The request failed.")}})},false)},print:function(){app.canvasView.print()}})})(jQuery);(function($){"use strict";app.ToolboxView=Backbone.View.extend({tagName:"div",className:"widget",initialize:function(){this.template=_.template($("#toolbox-template").html())},render:function(){this.$el.html(this.template(this.model.toJSON()));var toolsView=new app.ToolsView({model:this.model.get("tools")});toolsView.$el=this.$(".widget-content");toolsView.render();return this}})})(jQuery);(function($){"use strict";app.ToolView=Backbone.View.extend({events:{click:"clicked"},initialize:function(){this.template=_.template($("#tool-template").html());this.listenTo(this.model,"change:active",this.toggle)},render:function(){var html=this.template(this.model.toJSON());this.setElement(html);return this},clicked:function(){this.model.toggleActive()},toggle:function(){if(this.model.get("active")){this.$el.addClass("active");app.canvas.set("activeTool",this.model)}else{this.$el.removeClass("active");app.canvas.set("activeTool",null)}}})})(jQuery);(function($){"use strict";app.CanvasView=Backbone.View.extend({events:{click:"clicked"},initialize:function(){this.listenTo(this.model.get("diagrams"),"add",this.addOMTGDiagram);this.listenTo(this.model,"change:activeTool",this.setCursor)},clicked:function(event){var tool=this.model.get("activeTool");
if(tool){if(tool.get("model")=="omtgDiagram"){var diagram=new app.omtg.Diagram({type:tool.get("name"),left:event.offsetX,top:event.offsetY});this.model.get("diagrams").add(diagram)}tool.toggleActive();this.model.set("activeTool",null)}this.model.get("diagrams").unselectAll()},setCursor:function(){var tool=this.model.get("activeTool");if(tool&&tool.get("model")=="omtgDiagram"){this.$el.css("cursor","copy")}else{this.$el.css("cursor","default")}},addOMTGDiagram:function(diagram){app.plumb.setSuspendDrawing(true);var diagramView=new app.omtg.DiagramView({model:diagram});var dObject=diagramView.render().el;this.$el.append(dObject);app.plumb.makeSource(dObject,{filter:function(){var tool=app.canvas.get("activeTool");if(tool&&tool.get("model")=="omtgRelation")return true;return false}});app.plumb.makeTarget(dObject);app.plumb.draggable(dObject,{containment:"#canvas",scroll:true,drag:function(e,ui){if($(".cartographic-square").length>0)app.plumb.repaintEverything()}});app.plumb.setSuspendDrawing(false,true)},print:function(){}})})(jQuery);(function($){"use strict";app.ToolboxesView=Backbone.View.extend({initialize:function(){this.render()},render:function(){this.$el.empty();this.model.each(function(toolbox){var toolboxView=new app.ToolboxView({model:toolbox});this.$el.append(toolboxView.render().el)},this)}})})(jQuery);(function($){"use strict";app.ToolsView=Backbone.View.extend({render:function(){this.$el.empty();this.model.each(function(tool){var toolView=new app.ToolView({model:tool});this.$el.append(toolView.render().el)},this);return this}})})(jQuery);(function($){"use strict";app.XMLImporterView=Backbone.View.extend({id:"xml-importer",className:"modal fade",events:{"click #btnImport":"import","hidden.bs.modal":"teardown","change #js-upload-files":"uploadFile","load #js-upload-files":"import"},initialize:function(options){this.template=_.template($("#xmlimporter-template").html());this.render()},render:function(){this.$el.html(this.template());this.$el.modal({backdrop:"static",keyboard:false,show:true});return this},teardown:function(){this.$el.data("modal",null);this.remove()},uploadFile:function(evt){var file=evt.target.files[0];var reader=new FileReader;var self=this;reader.readAsText(file);reader.onload=function(){$.ajax({url:"XMLImporter",type:"POST",data:reader.result,contentType:"application/json; charset=UTF-8",complete:function(e,xhr,settings){self.allowImport(e.status);self.validXML=reader.result}})}},"import":function(){var parser=app.XMLParser;parser.parseOMTGSchema(this.validXML);this.teardown()},allowImport:function(status){if(status==202){this.$("#btnImport").removeClass("disabled")}else{this.$("#btnImport").addClass("disabled")}}})})(jQuery);(function($){"use strict";app.omtg.AttributeView=Backbone.View.extend({tagName:"tr",initialize:function(){this.template=_.template("<td><% if( isKey ){ %> <img class='attribute-key' src='imgs/omtg/key.png'> <% } %></td><td><%= attr %></td>")},render:function(){this.$el.html(this.template({isKey:this.model.get("isKey"),attr:this.model.escape("name")+": "+this.model.get("type")}));return this}})})(jQuery);(function($){"use strict";app.omtg.ConnectionEditorView=Backbone.View.extend({id:"connection-editor",className:"modal fade",events:{"click #btnUpdate":"update","click #btnDelete":"detach","hidden.bs.modal":"teardown"},initialize:function(options){this.template=_.template($("#omtg-connection-editor-template").html());this.connection=options.connection;this.render()},render:function(){this.$el.html(this.template());var fieldset=this.$("#connection-editor-form > fieldset");var type=this.connection.getType()[0];if(type=="association"||type=="spatial-association"||type=="arc-network"||type=="arc-network-self"){fieldset.append(_.template($("#omtg-connection-editor-description-template").html()));this.descriptionLabel=this.connection.getOverlay("description-label");this.$("#inputConnectionDescription").val(this.descriptionLabel.getLabel())}if(type=="association"||type=="spatial-association"){fieldset.append(_.template($("#omtg-connection-editor-cardinalities-template").html()));this.cardLabelA=this.connection.getOverlay("cardinality-labelA");this.$("#inputMinA").val(this.connection.getParameter("minA"));this.$("#inputMaxA").val(this.connection.getParameter("maxA"));this.cardLabelB=this.connection.getOverlay("cardinality-labelB");this.$("#inputMinB").val(this.connection.getParameter("minB"));this.$("#inputMaxB").val(this.connection.getParameter("maxB"))}if(type=="cartographic-generalization-disjoint"||type=="cartographic-generalization-overlapping"){fieldset.append(_.template($("#omtg-connection-editor-cartographic-template").html()));this.cartographicLabel=this.connection.getOverlay("cartographic-label");if(this.cartographicLabel.getLabel()=="scale")this.$("#scaleRadio").prop("checked",true);else this.$("#shapeRadio").prop("checked",true)}this.$el.modal({backdrop:"static",keyboard:false,show:true});return this},teardown:function(){this.$el.data("modal",null);this.remove()},update:function(){var type=this.connection.getType()[0];if(type=="association"||type=="spatial-association"||type=="arc-network"||type=="arc-network-self"){var description=this.$("#inputConnectionDescription").val().trim();this.descriptionLabel.setLabel(description)}if(type=="association"||type=="spatial-association"){var minA=this.$("#inputMinA").val().trim();var maxA=this.$("#inputMaxA").val().trim();this.cardLabelA.setLabel(this.concatCardLabel(minA,maxA));var minB=this.$("#inputMinB").val().trim();var maxB=this.$("#inputMaxB").val().trim();this.cardLabelB.setLabel(this.concatCardLabel(minB,maxB));this.connection.setParameter("minA",minA);this.connection.setParameter("maxA",maxA);this.connection.setParameter("minB",minB);this.connection.setParameter("maxB",maxB)}if(type=="cartographic-generalization-disjoint"||type=="cartographic-generalization-overlapping"){this.cartographicLabel.setLabel(this.$("input:radio[name=inlineRadioOptions]:checked").val())}this.teardown()},detach:function(event){if(confirm(app.msgs.deleteConnection)){var type=this.connection.getType()[0];if(type=="cartographic-generalization-disjoint"||type=="cartographic-generalization-overlapping"){app.plumb.detachAllConnections(this.connection.getOverlay("cartographic-square").getElement())}app.plumb.detach(this.connection);this.teardown()}},concatCardLabel:function(min,max){if(min==""&&max==""){return""}if(min!=""&&max!=""){return min+".."+max}return min+""+max}})})(jQuery);(function($){"use strict";app.omtg.DiagramEditorView=Backbone.View.extend({id:"diagram-editor",className:"modal fade",events:{"click #btnUpdate":"updateDiagram","hidden.bs.modal":"teardown","click #ulDiagramType a":"selectType","click #btnAddRow":"newAttribute","click .btnRowDelete":"deleteAttribute","click .btnRowUp":"moveAttributeUp","click .btnRowDown":"moveAttributeDown","blur .name-editable":"editName","blur .value-editable":"editValue","click .toggleKey":"toggleKey","click .toggleNotNull":"toggleNotNull","click .ulAttributeType a":"selectAttributeType"},initialize:function(options){this.template=_.template($("#omtg-diagram-editor-template").html());this.hasConnections=options.hasConnections;this.attrsClone=this.model.get("attributes").clone();this.render()},render:function(){this.$el.html(this.template(this.model.toJSON()));this.$el.modal({backdrop:"static",keyboard:false,show:true});if(this.hasConnections){this.$("#inputDiagramType").addClass("disabled");this.$("#inputDiagramTypeToggle").addClass("disabled")}this.attrsClone.each(function(attr){this.addAttribute(attr)},this);return this},teardown:function(){this.$el.data("modal",null);this.remove()},selectType:function(event){var selected=this.$(event.currentTarget).html();this.$("#inputDiagramType").html(selected);var type=this.$(event.currentTarget).data("type-name");this.$("#inputDiagramType").data("type-name",type)},updateDiagram:function(){var type=this.$("#inputDiagramType").data("type-name");if(type){this.model.set("type",type)}var name=this.$("#inputDiagramName").val().trim();if(name){this.model.set("name",name)}for(var i=0;i<this.attrsClone.length;i++){var attr=this.attrsClone.at(i);if(attr.get("name")==""){this.attrsClone.remove(attr);i--}}this.model.set({attributes:this.attrsClone});this.model.trigger("change",this.model);this.teardown()},newAttribute:function(){var attr=new app.omtg.Attribute;this.addAttribute(attr);this.attrsClone.add(attr)},addAttribute:function(attribute){var rowTemplate=_.template($("#omtg-attribute-row-editor-template").html());var html=rowTemplate(attribute.toJSON());this.$("#attrTable > tbody > tr:last").before(html)},deleteAttribute:function(event){var $row=this.$(event.currentTarget).closest("tr");this.attrsClone.remove(this.attrsClone.at($row.index()));$row.remove()},moveAttributeUp:function(event){var $row=this.$(event.currentTarget).closest("tr");if($row.index()>0){var att=this.attrsClone.at($row.index());this.attrsClone.remove(att);this.attrsClone.add(att,{at:$row.index()-1});$row.insertBefore($row.prev())}},moveAttributeDown:function(event){var $row=this.$(event.currentTarget).closest("tr");if($row.index()<this.attrsClone.length-1){var att=this.attrsClone.at($row.index()+1);this.attrsClone.remove(att);this.attrsClone.add(att,{at:$row.index()});$row.insertAfter($row.next())}},editName:function(event,ha){var index=this.$(event.currentTarget).closest("tr").index();this.attrsClone.at(index).set("name",this.$(event.currentTarget).text())},editValue:function(event){var index=this.$(event.currentTarget).closest("tr").index();this.attrsClone.at(index).set("defaultValue",this.$(event.currentTarget).text())},toggleKey:function(event){var index=this.$(event.currentTarget).closest("tr").index();this.attrsClone.at(index).set("isKey",this.$(event.currentTarget).prop("checked"))},toggleNotNull:function(event){var index=this.$(event.currentTarget).closest("tr").index();this.attrsClone.at(index).set("isNotNull",this.$(event.currentTarget).prop("checked"))},selectAttributeType:function(event){var index=this.$(event.currentTarget).closest("tr").index();var selected=this.$(event.currentTarget).text();this.$(event.currentTarget).parent().parent().siblings("button.btnAttributeType:first").html(selected+' <span class="caret"></span>');this.attrsClone.at(index).set("type",selected)}})})(jQuery);(function($){"use strict";app.omtg.DiagramView=Backbone.View.extend({tagName:"div",className:"diagram-container",events:{"click .badge-delete":"delete",click:_.debounce(function(e){if(this.doucleclicked){this.doucleclicked=false}else{this.model.toggleSelected()}},200),dblclick:function(e){this.doucleclicked=true;this.edit.call(this,e)},mouseup:"updatePosition"},initialize:function(){this.$conventional=$("#omtg-conventional-template");this.$georeferenced=$("#omtg-georeferenced-template");this.listenTo(this.model,"change",this.render)},render:function(){if(this.model.get("type")=="conventional"){this.template=_.template(this.$conventional.html())}else{this.template=_.template(this.$georeferenced.html())}this.el.id=this.model.get("id");this.$el.css({top:this.model.get("top"),left:this.model.get("left")});this.$el.html(this.template(this.model.toJSON()));var attributes=this.model.get("attributes");attributes.each(function(attribute){var attributeView=new app.omtg.AttributeView({model:attribute});this.$(".d-body > table > tbody").append(attributeView.render().el)},this);if(this.model.get("selected")){this.$el.addClass("selected");this.$(".badge-delete").removeClass("hidden")}else{this.$el.removeClass("selected")}app.plumb.repaintEverything();return this},edit:function(){var hasConnections=false;if(app.plumb.getConnections({source:this.el.id}).length||app.plumb.getConnections({target:this.el.id}).length)hasConnections=true;var modal=new app.omtg.DiagramEditorView({model:this.model,hasConnections:hasConnections})},"delete":function(){if(confirm(app.msgs.DELETE_DIAGRAM)){app.plumb.detachAllConnections(this.$el);this.model.set("deleted",true);this.remove()}},updatePosition:function(event){this.model.set({left:this.$el.position().left,top:this.$el.position().top})}})})(jQuery);